# -*- coding: utf-8 -*-
"""Practice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/TatheerZahara/dfc0ca7190f19c9c036182248d510ce7/practice.ipynb

So for this problem, we would use nested loops. Outer loop would control the number of rows, and inner would determine the number of columns in each row. 

For example, 

2 is row 1, and has 1 column

3 5 is second row, and it has two columns i.e. 3 and 5
"""

#THE CODE WORKS NOW 

def Prime(n):  
    for i in range(2,(n//2)+1):  
        if(n%i==0):  
            return(0)  
    return(1)  
  
N=int(input("Enter N:"))  
i=2 
primes=[] #list where we would store numbers 
while(1):  #infinite loop  
    if(Prime(i)):  
        primes.append(i) 
        if(len(primes)==N): #only breaks out of the loop when we have N numbers 
            break 
    i+=1 
num=0
for i in range (0,N):
  for j in range(0,i):
    if num<N:
      print(primes[num],end=" ")
    num+=1
  print(" ")